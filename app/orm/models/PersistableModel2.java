package orm.models;

import org.jooq.DSLContext;
import org.jooq.UpdatableRecord;

/**
 * The {@code PersistableModel2} should be used for models that needs two {@link org.jooq.Record} to be persisted into
 * the database. Each time a {@link org.jooq.Record} is requested, the previous one (if exists), it also passed, to
 * perform data refresh operations on both, the model and the new record.
 *
 * @param <R1> the first precise subtype of {@link UpdatableRecord}.
 * @param <R2> the second precise subtype of {@link UpdatableRecord}.
 */
public interface PersistableModel2<R1 extends UpdatableRecord<R1>,
                                      R2 extends UpdatableRecord<R2>> extends PersistableModel {

  /**
   * Returns the first {@link org.jooq.Record}.
   *
   * @param dslContext the {@link DSLContext}.
   *
   * @return the first {@link org.jooq.Record}.
   */
  R1 getUpdatableRecord1(DSLContext dslContext);

  /**
   * Returns the second {@link org.jooq.Record} and refresh the model using the first {@link org.jooq.Record}.
   *
   * @param dslContext the {@link DSLContext}.
   * @param r1 the first {@link org.jooq.Record}, that has been refreshed from the database with autogenerated fields.
   *
   * @return the first {@link org.jooq.Record}.
   */
  R2 getUpdatableRecord2(DSLContext dslContext, R1 r1);

  /**
   * Refresh the model with the second {@link org.jooq.Record}.
   *
   * @param r2 the second {@link org.jooq.Record}, that has been refreshed from the database with autogenerated fields.
   */
  void lastRefresh(R2 r2);

}
