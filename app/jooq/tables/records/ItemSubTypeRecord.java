/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jooq.tables.ItemSubType;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "item_sub_type",
    schema = "public"
)
public class ItemSubTypeRecord extends UpdatableRecordImpl<ItemSubTypeRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1163129341;

    /**
     * Setter for <code>public.item_sub_type.id_base_item_type</code>.
     */
    public ItemSubTypeRecord setIdBaseItemType(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.item_sub_type.id_base_item_type</code>.
     */
    @Column(name = "id_base_item_type", nullable = false, precision = 64)
    @NotNull
    @Nonnull
    public Long getIdBaseItemType() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.item_sub_type.id_sub_item_type</code>.
     */
    public ItemSubTypeRecord setIdSubItemType(@Nonnull Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.item_sub_type.id_sub_item_type</code>.
     */
    @Column(name = "id_sub_item_type", nullable = false, precision = 64)
    @NotNull
    @Nonnull
    public Long getIdSubItemType() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Long> field1() {
        return ItemSubType.ITEM_SUB_TYPE.ID_BASE_ITEM_TYPE;
    }

    @Override
    @Nonnull
    public Field<Long> field2() {
        return ItemSubType.ITEM_SUB_TYPE.ID_SUB_ITEM_TYPE;
    }

    @Override
    @Nonnull
    public Long component1() {
        return getIdBaseItemType();
    }

    @Override
    @Nonnull
    public Long component2() {
        return getIdSubItemType();
    }

    @Override
    @Nonnull
    public Long value1() {
        return getIdBaseItemType();
    }

    @Override
    @Nonnull
    public Long value2() {
        return getIdSubItemType();
    }

    @Override
    @Nonnull
    public ItemSubTypeRecord value1(@Nonnull Long value) {
        setIdBaseItemType(value);
        return this;
    }

    @Override
    @Nonnull
    public ItemSubTypeRecord value2(@Nonnull Long value) {
        setIdSubItemType(value);
        return this;
    }

    @Override
    @Nonnull
    public ItemSubTypeRecord values(@Nonnull Long value1, @Nonnull Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ItemSubTypeRecord
     */
    public ItemSubTypeRecord() {
        super(ItemSubType.ITEM_SUB_TYPE);
    }

    /**
     * Create a detached, initialised ItemSubTypeRecord
     */
    @ConstructorProperties({ "idBaseItemType", "idSubItemType" })
    public ItemSubTypeRecord(@Nonnull Long idBaseItemType, @Nonnull Long idSubItemType) {
        super(ItemSubType.ITEM_SUB_TYPE);

        setIdBaseItemType(idBaseItemType);
        setIdSubItemType(idSubItemType);
    }
}
