/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import jooq.tables.ColorInfo;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Nonnull;
import javax.annotation.processing.Generated;
import java.beans.ConstructorProperties;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "color_info",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "unique_color_info_on_color_source_and_rgba", columnNames = { "id_color_source", "id_rgba" })
    }
)
public class ColorInfoRecord extends UpdatableRecordImpl<ColorInfoRecord> implements Record5<Long, Long, Long, String, Short> {

    private static final long serialVersionUID = 1648055155;

    /**
     * Setter for <code>public.color_info.id_color</code>.
     */
    public ColorInfoRecord setIdColor(@Nonnull Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.color_info.id_color</code>.
     */
    @Column(name = "id_color", nullable = false, precision = 64)
    @NotNull
    @Nonnull
    public Long getIdColor() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.color_info.id_color_source</code>.
     */
    public ColorInfoRecord setIdColorSource(@Nonnull Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.color_info.id_color_source</code>.
     */
    @Column(name = "id_color_source", nullable = false, precision = 64)
    @NotNull
    @Nonnull
    public Long getIdColorSource() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.color_info.id_rgba</code>.
     */
    public ColorInfoRecord setIdRgba(@Nonnull Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.color_info.id_rgba</code>.
     */
    @Column(name = "id_rgba", nullable = false, precision = 64)
    @NotNull
    @Nonnull
    public Long getIdRgba() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.color_info.name</code>.
     */
    public ColorInfoRecord setName(@Nonnull String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.color_info.name</code>.
     */
    @Column(name = "name", nullable = false, length = 1024)
    @NotNull
    @Size(max = 1024)
    @Nonnull
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.color_info.color_id</code>.
     */
    public ColorInfoRecord setColorId(@Nonnull Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.color_info.color_id</code>.
     */
    @Column(name = "color_id", nullable = false, precision = 16)
    @NotNull
    @Nonnull
    public Short getColorId() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    @Nonnull
    public Row5<Long, Long, Long, String, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    @Nonnull
    public Row5<Long, Long, Long, String, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    @Nonnull
    public Field<Long> field1() {
        return ColorInfo.COLOR_INFO.ID_COLOR;
    }

    @Override
    @Nonnull
    public Field<Long> field2() {
        return ColorInfo.COLOR_INFO.ID_COLOR_SOURCE;
    }

    @Override
    @Nonnull
    public Field<Long> field3() {
        return ColorInfo.COLOR_INFO.ID_RGBA;
    }

    @Override
    @Nonnull
    public Field<String> field4() {
        return ColorInfo.COLOR_INFO.NAME;
    }

    @Override
    @Nonnull
    public Field<Short> field5() {
        return ColorInfo.COLOR_INFO.COLOR_ID;
    }

    @Override
    @Nonnull
    public Long component1() {
        return getIdColor();
    }

    @Override
    @Nonnull
    public Long component2() {
        return getIdColorSource();
    }

    @Override
    @Nonnull
    public Long component3() {
        return getIdRgba();
    }

    @Override
    @Nonnull
    public String component4() {
        return getName();
    }

    @Override
    @Nonnull
    public Short component5() {
        return getColorId();
    }

    @Override
    @Nonnull
    public Long value1() {
        return getIdColor();
    }

    @Override
    @Nonnull
    public Long value2() {
        return getIdColorSource();
    }

    @Override
    @Nonnull
    public Long value3() {
        return getIdRgba();
    }

    @Override
    @Nonnull
    public String value4() {
        return getName();
    }

    @Override
    @Nonnull
    public Short value5() {
        return getColorId();
    }

    @Override
    @Nonnull
    public ColorInfoRecord value1(@Nonnull Long value) {
        setIdColor(value);
        return this;
    }

    @Override
    @Nonnull
    public ColorInfoRecord value2(@Nonnull Long value) {
        setIdColorSource(value);
        return this;
    }

    @Override
    @Nonnull
    public ColorInfoRecord value3(@Nonnull Long value) {
        setIdRgba(value);
        return this;
    }

    @Override
    @Nonnull
    public ColorInfoRecord value4(@Nonnull String value) {
        setName(value);
        return this;
    }

    @Override
    @Nonnull
    public ColorInfoRecord value5(@Nonnull Short value) {
        setColorId(value);
        return this;
    }

    @Override
    @Nonnull
    public ColorInfoRecord values(@Nonnull Long value1, @Nonnull Long value2, @Nonnull Long value3, @Nonnull String value4, @Nonnull Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ColorInfoRecord
     */
    public ColorInfoRecord() {
        super(ColorInfo.COLOR_INFO);
    }

    /**
     * Create a detached, initialised ColorInfoRecord
     */
    @ConstructorProperties({ "idColor", "idColorSource", "idRgba", "name", "colorId" })
    public ColorInfoRecord(@Nonnull Long idColor, @Nonnull Long idColorSource, @Nonnull Long idRgba, @Nonnull String name, @Nonnull Short colorId) {
        super(ColorInfo.COLOR_INFO);

        setIdColor(idColor);
        setIdColorSource(idColorSource);
        setIdRgba(idRgba);
        setName(name);
        setColorId(colorId);
    }
}
